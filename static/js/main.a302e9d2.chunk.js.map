{"version":3,"sources":["enums.ts","redux/actions.ts","redux/types.ts","components/common/EmptyPlaceholder.tsx","components/common/ErrorNotice.tsx","components/common/NewsCard.tsx","components/panels/FeedPanelContent.tsx","components/navigation/Tabbar.tsx","components/layouts/PanelLayout.tsx","components/common/FilterCard.tsx","components/modals/FilterModal.tsx","components/panels/SourcesPanelContent.tsx","components/panels/FavoritesPanelContent.tsx","hooks/useTheme.ts","components/panels/ProfilePanelContent.tsx","App.tsx","serviceWorker.ts","redux/reducers/categories-reducer.ts","redux/reducers/cities-reducer.ts","redux/reducers/favorites-reducer.ts","redux/reducers/filters-reducer.ts","redux/reducers/news-reducer.ts","redux/reducers/regions-reducer.ts","redux/reducers/theme-reducer.ts","redux/reducers/rootReducer.ts","index.tsx"],"names":["ETheme","apiURI","fetchNews","dispatch","a","type","payload","fetch","response","json","message","EmptyPlaceholder","icon","ErrorNotice","mode","header","NewsCard","props","useDispatch","size","style","minWidth","maxWidth","margin","weight","level","Date","added","toLocaleDateString","photo","src","width","alt","marginBottom","text","video","marginTop","onClick","bind","localStorage","setItem","JSON","stringify","FeedPanelContent","connect","useSelector","state","news","data","error","loading","useEffect","display","justifyContent","flexWrap","length","map","n","tabbarItems","title","id","Tabbar","activeTab","setActiveTab","vertical","wide","t","selected","key","PanelLayout","children","FilterCard","city","date","region","source","category","zIndex","name","FilterModal","modal","setModal","regionsData","regions","citiesData","cities","categoriesData","categories","useState","setTitle","setRegion","setCity","setSource","setCategory","handleSelectOrInputChange","callback","event","target","value","formIsCorrect","Boolean","activeModal","left","right","disabled","onClose","top","placeholder","onChange","r","c","SourcesPanelContent","filters","isFetching","onRefresh","f","action","FavoritesPanelContent","favorites","useTheme","theme","themeAlias","Dark","setTheme","document","body","setAttribute","toggleTheme","choice","Light","ProfilePanelContent","App","currentPanel","bridge","send","then","catch","console","log","activePanel","window","location","hostname","match","initialState","rootReducer","combineReducers","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a302e9d2.chunk.js","sourcesContent":["export enum ETheme {\r\n  Dark,\r\n  Light\r\n}","import { Dispatch } from \"redux\"\r\nimport { ETheme } from \"../enums\"\r\nimport { IAction, INews, INewsFilter } from \"../interfaces\"\r\nimport { ADD_TO_FAVORITES, CREATE_FILTER, FETCH_CATEGORIES, FETCH_CITIES, FETCH_FILTERS, FETCH_NEWS, FETCH_REGIONS, REMOVE_FROM_FAVORITES, SET_CATEGORIES_LOADING, SET_CATEGORIES_LOADING_ERROR, SET_CITIES_LOADING, SET_CITIES_LOADING_ERROR, SET_FILTERS_LOADING, SET_FILTERS_LOADING_ERROR, SET_NEWS_LOADING, SET_NEWS_LOADING_ERROR, SET_REGIONS_LOADING, SET_REGIONS_LOADING_ERROR, SET_THEME } from \"./types\"\r\n\r\nconst apiURI = 'http://195.2.85.245'\r\n\r\nexport const fetchCategories = () => async (dispatch: Dispatch<IAction>) => {\r\n  try {\r\n    dispatch({ type: SET_CATEGORIES_LOADING, payload: true })\r\n    dispatch({ type: SET_CATEGORIES_LOADING_ERROR, payload: null })\r\n\r\n    const response = await fetch(`${apiURI}/categories`)\r\n    const json = await response.json()\r\n\r\n    dispatch({ type: FETCH_CATEGORIES, payload: json })\r\n  } catch (e) {\r\n    dispatch({ type: SET_CATEGORIES_LOADING_ERROR, payload: e.message })\r\n  } finally {\r\n    dispatch({ type: SET_CATEGORIES_LOADING, payload: false })\r\n  }\r\n}\r\n\r\nexport const fetchRegions = () => async (dispatch: Dispatch<IAction>) => {\r\n  try {\r\n    dispatch({ type: SET_REGIONS_LOADING, payload: true })\r\n    dispatch({ type: SET_REGIONS_LOADING_ERROR, payload: null })\r\n\r\n    const response = await fetch(`${apiURI}/region`)\r\n    const json = await response.json()\r\n\r\n    dispatch({ type: FETCH_REGIONS, payload: json })\r\n  } catch (e) {\r\n    dispatch({ type: SET_REGIONS_LOADING_ERROR, payload: e.message })\r\n  } finally {\r\n    dispatch({ type: SET_REGIONS_LOADING, payload: false })\r\n  }\r\n}\r\n\r\nexport const fetchCities = () => async (dispatch: Dispatch<IAction>) => {\r\n  try {\r\n    dispatch({ type: SET_CITIES_LOADING, payload: true })\r\n    dispatch({ type: SET_CITIES_LOADING_ERROR, payload: null })\r\n\r\n    const response = await fetch(`${apiURI}/city`)\r\n    const json = await response.json()\r\n\r\n    dispatch({ type: FETCH_CITIES, payload: json })\r\n  } catch (e) {\r\n    dispatch({ type: SET_CITIES_LOADING_ERROR, payload: e.message })\r\n  } finally {\r\n    dispatch({ type: SET_CITIES_LOADING, payload: false })\r\n  }\r\n}\r\n\r\nexport const fetchNews = () => async (dispatch: Dispatch<IAction>) => {\r\n  try {\r\n    dispatch({ type: SET_NEWS_LOADING, payload: true })\r\n    dispatch({ type: SET_NEWS_LOADING_ERROR, payload: null })\r\n\r\n    const response = await fetch(`${apiURI}/post`)\r\n    const json = await response.json()\r\n\r\n    dispatch({ type: FETCH_NEWS, payload: json })\r\n  } catch (e) {\r\n    dispatch({ type: SET_NEWS_LOADING_ERROR, payload: e.message })\r\n  } finally {\r\n    dispatch({ type: SET_NEWS_LOADING, payload: false })\r\n  }\r\n}\r\n\r\nexport const fetchFilters = () => async (dispatch: Dispatch<IAction>) => {\r\n  try {\r\n    dispatch({ type: SET_FILTERS_LOADING, payload: true })\r\n    dispatch({ type: SET_FILTERS_LOADING_ERROR, payload: null })\r\n\r\n    const response = await fetch(`${apiURI}/filters`)\r\n    const json = await response.json()\r\n\r\n    dispatch({ type: FETCH_FILTERS, payload: json })\r\n  } catch (e) {\r\n    dispatch({ type: SET_FILTERS_LOADING_ERROR, payload: e.message })\r\n  } finally {\r\n    dispatch({ type: SET_FILTERS_LOADING, payload: false })\r\n  }\r\n}\r\n\r\nexport const setCategoriesLoading = (payload: boolean) => ({ type: SET_CATEGORIES_LOADING, payload })\r\nexport const setCategoriesLoadingError = (payload: string) => ({ type: SET_CATEGORIES_LOADING, payload })\r\n\r\nexport const setRegionsLoading = (payload: boolean) => ({ type: SET_REGIONS_LOADING, payload })\r\nexport const setRegionsLoadingError = (payload: string) => ({ type: SET_REGIONS_LOADING_ERROR, payload })\r\n\r\nexport const setCitiesLoading = (payload: boolean) => ({ type: SET_CITIES_LOADING, payload })\r\nexport const setCitiesLoadingError = (payload: string) => ({ type: SET_CITIES_LOADING_ERROR, payload })\r\n\r\nexport const setNewsLoading = (payload: boolean) => ({ type: SET_NEWS_LOADING, payload })\r\nexport const setNewsLoadingError = (payload: string) => ({ type: SET_NEWS_LOADING_ERROR, payload })\r\n\r\nexport const setFiltersLoading = (payload: boolean) => ({ type: SET_FILTERS_LOADING, payload })\r\nexport const setFiltersLoadingError = (payload: string) => ({ type: SET_FILTERS_LOADING_ERROR, payload })\r\nexport const createFilter = (payload: INewsFilter) => ({ type: CREATE_FILTER, payload })\r\n\r\nexport const setTheme = (payload: ETheme) => ({ type: SET_THEME, payload })\r\n\r\nexport const addToFavorites = (payload: INews) => async (dispatch: Dispatch<IAction>) => {\r\n  dispatch({ type: ADD_TO_FAVORITES, payload })\r\n  localStorage.setItem('favorites', JSON.stringify(payload))\r\n}\r\nexport const removeFromFavorites = (payload: string) => async (dispatch: Dispatch<IAction>) => {\r\n  const json = localStorage.getItem('favorites') || '[]' \r\n  dispatch({ type: REMOVE_FROM_FAVORITES, payload })\r\n  const data = JSON.parse(json)\r\n  localStorage.setItem('favorites', JSON.stringify(data))\r\n}","export const FETCH_CATEGORIES = 'FETCH-CATEGORIES'\r\nexport const FETCH_REGIONS = 'FETCH-REGIONS'\r\nexport const FETCH_CITIES = 'FETCH-CITIES'\r\nexport const FETCH_NEWS = 'FETCH-NEWS'\r\nexport const FETCH_FILTERS = 'FETCH-FILTERS'\r\n\r\nexport const SET_CATEGORIES_LOADING = 'SET-CATEGORIES-LOADING'\r\nexport const SET_REGIONS_LOADING = 'SET-REGIONS-LOADING'\r\nexport const SET_CITIES_LOADING = 'SET-CITIES-LOADING'\r\nexport const SET_NEWS_LOADING = 'SET-NEWS-LOADING'\r\nexport const SET_FILTERS_LOADING = 'SET-FILTERS-LOADING'\r\n\r\nexport const SET_CATEGORIES_LOADING_ERROR = 'SET-CATEGORIES-LOADING-ERROR'\r\nexport const SET_REGIONS_LOADING_ERROR = 'SET-REGIONS-LOADING-ERROR'\r\nexport const SET_CITIES_LOADING_ERROR = 'SET-CITIES-LOADING-ERROR'\r\nexport const SET_NEWS_LOADING_ERROR = 'SET-NEWS-LOADING-ERROR'\r\nexport const SET_FILTERS_LOADING_ERROR = 'SET-FILTERS-LOADING-ERROR'\r\n\r\nexport const CREATE_FILTER = 'CREATE-FILTER'\r\n\r\nexport const SET_THEME = 'APP/SET-THEME'\r\n\r\nexport const ADD_TO_FAVORITES = 'ADD-TO-FAVORITES'\r\nexport const REMOVE_FROM_FAVORITES = 'REMOVE-FROM-FAVORITES'","import { Icon36CalendarOutline } from '@vkontakte/icons'\r\nimport { Placeholder } from '@vkontakte/vkui'\r\nimport React from 'react'\r\n\r\nexport const EmptyPlaceholder: React.FC = () =>\r\n  <Placeholder\r\n    icon={<Icon36CalendarOutline />}\r\n  >\r\n    Пока здесь ничего нет\r\n  </Placeholder>","import { FormStatus } from '@vkontakte/vkui'\r\nimport React from 'react'\r\n\r\nexport const ErrorNotice = () =>\r\n  <FormStatus\r\n    mode=\"error\"\r\n    header=\"Ошибка при подключении к серверу\"\r\n  >\r\n    Ошибка при загрузке данных\r\n  </FormStatus>","import { Card, Div, Title, Text, Button, Group } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { INews } from '../../interfaces'\r\nimport { addToFavorites } from '../../redux/actions'\r\n\r\nexport const NewsCard: React.FC<INews> = props => {\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <Card\r\n      size=\"l\"\r\n      mode=\"outline\"\r\n      style={{\r\n        minWidth: '300px',\r\n        maxWidth: '350px',\r\n        margin: '.5rem'\r\n      }}\r\n    >\r\n      <Div>\r\n        <Title weight=\"medium\" level=\"3\">\r\n          {new Date(props.added).toLocaleDateString()}\r\n        </Title>\r\n        {\r\n          props.photo &&\r\n          <img\r\n            src={props.photo}\r\n            width=\"100%\"\r\n            alt=\"news\"\r\n          />\r\n        }\r\n        <Group style={{ marginBottom: '.5rem' }}>\r\n          <Text weight=\"regular\">{props.text}</Text>\r\n        </Group>\r\n        {\r\n          props.video &&\r\n          <video>\r\n            <source src={props.video} />\r\n          </video>\r\n        }\r\n        <Button \r\n          mode=\"secondary\" \r\n          size=\"xl\" \r\n          style={{ marginTop: 'auto' }}\r\n          onClick={dispatch.bind(null, addToFavorites(props))}\r\n        >В избранное</Button>\r\n      </Div>\r\n    </Card>\r\n  )\r\n}","import { Spinner } from '@vkontakte/vkui'\r\nimport React, { useEffect } from 'react'\r\nimport { connect, useDispatch, useSelector } from 'react-redux'\r\nimport { IState } from '../../interfaces'\r\nimport { fetchNews } from '../../redux/actions'\r\nimport { EmptyPlaceholder } from '../common/EmptyPlaceholder'\r\nimport { ErrorNotice } from '../common/ErrorNotice'\r\nimport { NewsCard } from '../common/NewsCard'\r\n\r\nexport const FeedPanelContent = connect()(() => {\r\n  const { data, error, loading } = useSelector((state: IState) => state.news)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchNews())\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{\r\n      margin: '0 auto',\r\n      maxWidth: '1200px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap'\r\n    }}>\r\n      {\r\n        error\r\n        ?\r\n          <ErrorNotice />\r\n        :\r\n          loading\r\n          ?\r\n            <Spinner size=\"large\" />\r\n          :\r\n            !data.length\r\n            ?\r\n              <EmptyPlaceholder />\r\n            :\r\n              data.map(n => <NewsCard {...n} />)\r\n      }\r\n    </div>\r\n  )\r\n})","import React from 'react'\r\nimport { FixedLayout, Separator, Tabs, HorizontalScroll, TabsItem } from '@vkontakte/vkui'\r\nimport { TabbarItemId } from '../../types'\r\n\r\ninterface ITabbarItem {\r\n  id: TabbarItemId\r\n  title: string\r\n}\r\n\r\ninterface ITabbarProps {\r\n  activeTab: TabbarItemId\r\n  setActiveTab: (t: TabbarItemId) => void\r\n} \r\n\r\nconst tabbarItems: ITabbarItem[] = [\r\n  { title: 'Лента', id: 'feed' },\r\n  { title: 'Платформы', id: 'sources' },\r\n  { title: 'Избранное', id: 'favorites' },\r\n  { title: 'Профиль', id: 'profile' }\r\n]\r\n\r\nexport const Tabbar: React.FC<ITabbarProps> = ({ activeTab, setActiveTab }) => {\r\n  return (\r\n    <FixedLayout vertical=\"top\">\r\n      <Separator wide />\r\n      <Tabs>\r\n        <HorizontalScroll>\r\n          {\r\n            tabbarItems.map(t =>\r\n              <TabsItem\r\n                selected={activeTab === t.id}\r\n                onClick={setActiveTab.bind(null, t.id)}\r\n                key={t.id}\r\n              >\r\n                {t.title}\r\n              </TabsItem>\r\n            )\r\n          }\r\n        </HorizontalScroll>\r\n      </Tabs>\r\n    </FixedLayout>\r\n  )\r\n}","import React from 'react'\r\nimport { Div, Panel, PanelHeader } from '@vkontakte/vkui'\r\nimport { PanelProps } from '@vkontakte/vkui/dist/components/Panel/Panel'\r\nimport { Tabbar } from '../navigation/Tabbar'\r\nimport { TabbarItemId } from '../../types'\r\n\r\ninterface IPanelLayoutProps extends PanelProps {\r\n  activeTab: TabbarItemId\r\n  setActiveTab: (t: TabbarItemId) => void\r\n}\r\n\r\nexport const PanelLayout: React.FC<IPanelLayoutProps> = props =>\r\n  <Panel {...props}>\r\n    <PanelHeader>\r\n      <Tabbar {...props} />\r\n    </PanelHeader>\r\n    <Div style={{\r\n      margin: '0 auto',\r\n      maxWidth: '1200px',\r\n    }}>\r\n      {props.children}\r\n    </Div>\r\n  </Panel>","import { Button, Card, Div, Group, Header, Separator, SimpleCell } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport { INewsFilter } from '../../interfaces'\r\n\r\nexport const FilterCard: React.FC<INewsFilter> = ({ title, city, date, region, source, category }) => {\r\n  return (\r\n    <Card\r\n      size=\"l\" \r\n      mode=\"outline\"\r\n      style={{ \r\n        minWidth: '300px',\r\n        maxWidth: '350px', \r\n        margin: '.5rem',\r\n        zIndex: -1\r\n      }}\r\n    >\r\n      <Div>\r\n        <Header>{title}</Header>\r\n        <Separator />\r\n        {\r\n          (region || city) &&\r\n          <Group>\r\n              {region && <SimpleCell>Регион: {region.title}</SimpleCell>}\r\n              {city && <SimpleCell>Населенный пункт: {city.title}</SimpleCell>}\r\n          </Group>\r\n        }\r\n        {source && <SimpleCell>Источник: {source}</SimpleCell>}\r\n        {date && <SimpleCell>Дата: {date.toLocaleDateString()}</SimpleCell>}\r\n        {category && <SimpleCell>Категории: {category.name}</SimpleCell>}\r\n        <Button mode=\"secondary\" size=\"xl\">\r\n          Добавить сообщество\r\n        </Button>\r\n      </Div>\r\n    </Card>\r\n  )\r\n}","import { Icon24Cancel } from '@vkontakte/icons'\r\nimport { ModalRoot, ModalPage, ModalPageHeader, FormLayout, FormLayoutGroup, Select, Input, PanelHeaderButton } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ICategory, ICity, INewsFilter, IRegion, IState } from '../../interfaces'\r\nimport { createFilter } from '../../redux/actions'\r\n\r\ninterface IFilterModalProps {\r\n  modal: string | null\r\n  setModal: (m: string | null) => void\r\n}\r\n\r\n\r\nexport const FilterModal: React.FC<IFilterModalProps> = ({ modal = null, setModal }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { data: regionsData } = useSelector((state: IState) => state.regions)\r\n  const { data: citiesData } = useSelector((state: IState) => state.cities)\r\n  const { data: categoriesData } = useSelector((state: IState) => state.categories)\r\n\r\n  const [title, setTitle] = useState<string>('')\r\n  const [region, setRegion] = useState<IRegion>()\r\n  const [city, setCity] = useState<ICity>()\r\n  const [source, setSource] = useState<string>('VK')\r\n  const [date] = useState<Date>(new Date())\r\n  const [category, setCategory] = useState<ICategory>()\r\n\r\n\r\n  const handleSelectOrInputChange = (callback: (value: any) => void) =>\r\n    (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => callback(event.target.value)\r\n\r\n  const createFilterHandler = () => {\r\n    const filter: INewsFilter = { title, category, city, date, region, source }    \r\n\r\n    dispatch(createFilter(filter))\r\n  }\r\n\r\n  const formIsCorrect = Boolean(title)\r\n\r\n  return (\r\n    <ModalRoot activeModal={modal}>\r\n      <ModalPage\r\n        id=\"filters\"\r\n        header={\r\n          <ModalPageHeader\r\n            left={\r\n              <PanelHeaderButton onClick={setModal.bind(null, null)}>\r\n                <Icon24Cancel />\r\n              </PanelHeaderButton>\r\n            }\r\n            right={\r\n              <PanelHeaderButton\r\n                onClick={() => {\r\n                  createFilterHandler()\r\n                  setModal(null)\r\n                }}\r\n                disabled={!formIsCorrect}\r\n              >\r\n                Создать\r\n              </PanelHeaderButton>\r\n            }\r\n          >\r\n            Фильтры\r\n          </ModalPageHeader>\r\n        }\r\n        onClose={setModal.bind(null, null)}\r\n      >\r\n        <FormLayout>\r\n          <Input\r\n            top=\"Название\"\r\n            placeholder=\"Придумайте название для ленты\"\r\n            value={title}\r\n            onChange={handleSelectOrInputChange(setTitle)}\r\n          />\r\n          <FormLayoutGroup top=\"Геолокация\">\r\n            <Select\r\n              placeholder=\"Выберите регион\"\r\n              onChange={handleSelectOrInputChange(setRegion)}\r\n            >\r\n              {\r\n                regionsData.map(r =>\r\n                  <option\r\n                    key={r.id}\r\n                    value={r.id}\r\n                  >\r\n                    {r.title}\r\n                  </option>\r\n                )\r\n              }\r\n            </Select>\r\n            <Select\r\n              placeholder=\"Выберите город\"\r\n              disabled={!region}\r\n              onChange={handleSelectOrInputChange(setCity)}\r\n            >\r\n              {\r\n                citiesData.map(c =>\r\n                  <option\r\n                    key={c.id}\r\n                    value={c.id}\r\n                  >\r\n                    {c.title}\r\n                  </option>\r\n                )\r\n              }\r\n            </Select>\r\n          </FormLayoutGroup>\r\n          <Select\r\n            top=\"Источник\"\r\n            placeholder=\"Выберите источник\"\r\n            onChange={handleSelectOrInputChange(setSource)}\r\n          >\r\n            {\r\n              <option value={source}>\r\n                {source}\r\n              </option>\r\n            }\r\n          </Select>\r\n          <FormLayoutGroup top=\"Дата и время\">\r\n            <Input type=\"date\" placeholder=\"Выберите дату\" />\r\n            <Input type=\"time\" placeholder=\"Выберите время\" />\r\n          </FormLayoutGroup>\r\n          <Select\r\n            top=\"Категория\"\r\n            placeholder=\"Выберите категорию контента\"\r\n            onChange={handleSelectOrInputChange(setCategory)}\r\n          >\r\n            {\r\n              categoriesData.map(c =>\r\n                <option\r\n                  key={c.id}\r\n                  value={c.id}\r\n                >\r\n                  {c.name}\r\n                </option>\r\n              )\r\n            }\r\n          </Select>\r\n        </FormLayout>\r\n      </ModalPage>\r\n    </ModalRoot>\r\n  )\r\n}","import { Icon56AddCircleOutline } from '@vkontakte/icons'\r\nimport { Button, Group, Placeholder, PullToRefresh, Spinner } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { IState } from '../../interfaces'\r\nimport { fetchFilters } from '../../redux/actions'\r\nimport { ErrorNotice } from '../common/ErrorNotice'\r\nimport { FilterCard } from '../common/FilterCard'\r\nimport { FilterModal } from '../modals/FilterModal'\r\n\r\nexport const SourcesPanelContent: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [modal, setModal] = useState<string | null>(null)\r\n  const { data, error, loading } = useSelector((state: IState) => state.filters)\r\n\r\n  return (\r\n    <>\r\n      <FilterModal modal={modal} setModal={setModal} />\r\n      {\r\n        error\r\n          ?\r\n          <ErrorNotice />\r\n          :\r\n          loading\r\n            ?\r\n            <Spinner size=\"large\" />\r\n            :\r\n            data.length\r\n              ?\r\n              <>\r\n                <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '1rem' }}>\r\n                  <Button size=\"l\" onClick={setModal.bind(null, 'filters')}>\r\n                    Добавить ленту\r\n                  </Button>\r\n                </div>\r\n                <PullToRefresh isFetching={loading} onRefresh={dispatch.bind(null, fetchFilters())}>\r\n                  <Group>\r\n                    {data.map(f => <FilterCard {...f} />)}\r\n                  </Group>\r\n                </PullToRefresh>\r\n              </>\r\n              :\r\n              <Placeholder\r\n                icon={<Icon56AddCircleOutline />}\r\n                header=\"Персонализированные ленты\"\r\n                action={\r\n                  <Button size=\"l\" onClick={setModal.bind(null, 'filters')}>\r\n                    Добавить ленту\r\n                  </Button>\r\n                }>\r\n                Настройте набор источников, из которых хотите получать новости\r\n              </Placeholder>\r\n      }\r\n    </>\r\n  )\r\n}","import { Icon56DiamondOutline } from '@vkontakte/icons'\r\nimport { Placeholder } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport { connect, useSelector } from 'react-redux'\r\nimport { IState } from '../../interfaces'\r\nimport { NewsCard } from '../common/NewsCard'\r\n\r\nexport const FavoritesPanelContent = connect()(() => {\r\n  const { favorites } = useSelector((state: IState) => state.favorites)\r\n  return (\r\n    <div style={{\r\n      margin: '0 auto',\r\n      maxWidth: '1200px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap'\r\n    }}>\r\n      {\r\n        !favorites.length\r\n          ?\r\n          <Placeholder icon={<Icon56DiamondOutline />}>\r\n            Вы еще не добавили закладки\r\n              </Placeholder>\r\n          :\r\n          favorites.map(f => <NewsCard {...f} />)\r\n      }\r\n    </div>\r\n  )\r\n})","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { ETheme } from \"../enums\"\r\nimport { IState } from \"../interfaces\"\r\nimport { setTheme as setThemeAction } from '../redux/actions'\r\n\r\nexport const useTheme = () => {\r\n  const { theme } = useSelector((state: IState) => state.theme)\r\n  const dispatch = useDispatch()\r\n\r\n  let themeAlias: string = 'bright_light'\r\n\r\n  if (theme === ETheme.Dark) themeAlias = 'space_gray'\r\n\r\n  const setTheme = () => {\r\n    document.body.setAttribute('scheme', themeAlias)\r\n  }\r\n\r\n  const toggleTheme = () => {\r\n    const choice = theme === ETheme.Light ? ETheme.Dark : ETheme.Light\r\n    dispatch(setThemeAction(choice))\r\n  }\r\n\r\n  return { theme, setTheme, toggleTheme }\r\n} ","import { Button } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport { useTheme } from '../../hooks/useTheme'\r\n\r\nexport const ProfilePanelContent: React.FC = () => {\r\n  const { toggleTheme } = useTheme()\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={toggleTheme}>Сменить тему</Button>\r\n    </>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\nimport { View } from '@vkontakte/vkui'\nimport { TabbarItemId } from './types'\nimport { FeedPanelContent } from './components/panels/FeedPanelContent'\nimport { PanelLayout } from './components/layouts/PanelLayout'\nimport { SourcesPanelContent } from './components/panels/SourcesPanelContent'\nimport bridge from '@vkontakte/vk-bridge'\nimport { useDispatch } from 'react-redux'\nimport { fetchCategories, fetchCities, fetchNews, fetchRegions } from './redux/actions'\nimport { FavoritesPanelContent } from './components/panels/FavoritesPanelContent'\nimport { ProfilePanelContent } from './components/panels/ProfilePanelContent'\nimport { useTheme } from './hooks/useTheme'\n\nexport const App: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<TabbarItemId>('feed')\n  const { setTheme } = useTheme()\n\n  const dispatch = useDispatch()\n\n  let currentPanel: React.ReactNode = null\n\n  switch (activeTab) {\n    case 'feed':\n      currentPanel = <FeedPanelContent />\n      break\n    case 'sources':\n      currentPanel = <SourcesPanelContent />\n      break\n    case 'favorites':\n      currentPanel = <FavoritesPanelContent />\n      break\n    case 'profile':\n      currentPanel = <ProfilePanelContent />\n      break\n  }\n\n  useEffect(() => {\n    bridge\n      .send('VKWebAppInit')\n      .then(() => bridge.send('VKWebAppGetPersonalCard'))\n      .catch(console.log)\n  })\n\n  useEffect(() => {\n    dispatch(fetchCategories())\n  }, [dispatch])\n\n  // useEffect(() => {\n  //   dispatch(fetchCities())\n  // }, [])\n\n  useEffect(() => {\n    dispatch(fetchRegions())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(fetchNews())\n  }, [dispatch])\n\n  useEffect(setTheme)\n\n  return (\n    <View activePanel=\"main\" >\n      <PanelLayout \n        id=\"main\" \n        activeTab={activeTab} \n        setActiveTab={setActiveTab}\n      >\n        {currentPanel}\n      </PanelLayout>\n    </View>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Reducer } from \"react\"\r\nimport { IAction, ICategory, IStatePartial } from \"../../interfaces\"\r\nimport { FETCH_CATEGORIES, SET_CATEGORIES_LOADING, SET_CATEGORIES_LOADING_ERROR } from \"../types\"\r\n\r\nconst initialState: IStatePartial<ICategory> = {\r\n  data: [],\r\n  error: null,\r\n  loading: false\r\n}\r\n\r\nexport const categoriesReducer: Reducer<IStatePartial<ICategory>, IAction> = (state: IStatePartial<ICategory> = initialState, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case FETCH_CATEGORIES: return { ...state, data: payload }\r\n    case SET_CATEGORIES_LOADING: return { ...state, loading: payload }\r\n    case SET_CATEGORIES_LOADING_ERROR: return { ...state, error: payload }\r\n\r\n    default: return state\r\n  }\r\n}","import { Reducer } from \"react\"\r\nimport { IAction, ICategory, IStatePartial } from \"../../interfaces\"\r\nimport { FETCH_CITIES, SET_CITIES_LOADING, SET_CITIES_LOADING_ERROR } from \"../types\"\r\n\r\nconst initialState: IStatePartial<ICategory> = {\r\n  data: [],\r\n  error: null,\r\n  loading: false\r\n}\r\n\r\nexport const citiesReducer: Reducer<IStatePartial<ICategory>, IAction> = (state: IStatePartial<ICategory> = initialState, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case FETCH_CITIES: return { ...state, data: payload }\r\n    case SET_CITIES_LOADING: return { ...state, loading: payload }\r\n    case SET_CITIES_LOADING_ERROR: return { ...state, error: payload }\r\n\r\n    default: return state\r\n  }\r\n}","import { Reducer } from \"react\"\r\nimport { IAction, IStatePartialFavorites } from \"../../interfaces\"\r\nimport { ADD_TO_FAVORITES, REMOVE_FROM_FAVORITES } from \"../types\"\r\n\r\nconst initialState: IStatePartialFavorites = {\r\n  favorites: []\r\n}\r\n\r\nexport const favoritesReducer: Reducer<IStatePartialFavorites, IAction> = (state: IStatePartialFavorites = initialState, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case ADD_TO_FAVORITES: return { ...state, favorites: [...state.favorites, payload] }\r\n    case REMOVE_FROM_FAVORITES: return { ...state, favorites: [...state.favorites.filter(f => f.id !== payload.id)] }\r\n\r\n    default: return state\r\n  }\r\n}","import { Reducer } from \"react\"\r\nimport { IAction, IRegion, IStatePartial } from \"../../interfaces\"\r\nimport { CREATE_FILTER, FETCH_FILTERS, SET_FILTERS_LOADING, SET_FILTERS_LOADING_ERROR } from \"../types\"\r\n\r\nconst initialState: IStatePartial<IRegion> = {\r\n  data: [],\r\n  error: null,\r\n  loading: false\r\n}\r\n\r\nexport const filtersReducer: Reducer<IStatePartial<IRegion>, IAction> = (state: IStatePartial<IRegion> = initialState, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case CREATE_FILTER: return { ...state, data: [...state.data, payload] }\r\n    case FETCH_FILTERS: return { ...state, data: payload }\r\n    case SET_FILTERS_LOADING: return { ...state, loading: payload }\r\n    case SET_FILTERS_LOADING_ERROR: return { ...state, error: payload }\r\n\r\n    default: return state\r\n  }\r\n}","import { Reducer } from \"react\"\r\nimport { IAction, ICategory, IStatePartial } from \"../../interfaces\"\r\nimport { FETCH_NEWS, SET_NEWS_LOADING, SET_NEWS_LOADING_ERROR } from \"../types\"\r\n\r\nconst initialState: IStatePartial<ICategory> = {\r\n  data: [],\r\n  error: null,\r\n  loading: false\r\n}\r\n\r\nexport const newsReducer: Reducer<IStatePartial<ICategory>, IAction> = (state: IStatePartial<ICategory> = initialState, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case FETCH_NEWS: return { ...state, data: payload }\r\n    case SET_NEWS_LOADING: return { ...state, loading: payload }\r\n    case SET_NEWS_LOADING_ERROR: return { ...state, error: payload }\r\n\r\n    default: return state\r\n  }\r\n}","import { Reducer } from \"react\"\r\nimport { IAction, IRegion, IStatePartial } from \"../../interfaces\"\r\nimport { FETCH_REGIONS, SET_REGIONS_LOADING, SET_REGIONS_LOADING_ERROR } from \"../types\"\r\n\r\nconst initialState: IStatePartial<IRegion> = {\r\n  data: [],\r\n  error: null,\r\n  loading: false\r\n}\r\n\r\nexport const regionsReducer: Reducer<IStatePartial<IRegion>, IAction> = (state: IStatePartial<IRegion> = initialState, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case FETCH_REGIONS: return { ...state, data: payload }\r\n    case SET_REGIONS_LOADING: return { ...state, loading: payload }\r\n    case SET_REGIONS_LOADING_ERROR: return { ...state, error: payload }\r\n\r\n    default: return state\r\n  }\r\n}","import { Reducer } from \"react\"\r\nimport { ETheme } from \"../../enums\"\r\nimport { IAction, IStatePartialTheme } from \"../../interfaces\"\r\nimport { SET_THEME } from \"../types\"\r\n\r\nconst initialState: IStatePartialTheme = {\r\n  theme: ETheme.Light\r\n}\r\n\r\nexport const themeReducer: Reducer<IStatePartialTheme, IAction> = (state: IStatePartialTheme = initialState, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case SET_THEME: return { ...state, theme: payload }\r\n\r\n    default: return state\r\n  }\r\n}","import { combineReducers } from \"redux\"\r\nimport { categoriesReducer } from \"./categories-reducer\"\r\nimport { citiesReducer } from \"./cities-reducer\"\r\nimport { favoritesReducer } from \"./favorites-reducer\"\r\nimport { filtersReducer } from \"./filters-reducer\"\r\nimport { newsReducer } from \"./news-reducer\"\r\nimport { regionsReducer } from \"./regions-reducer\"\r\nimport { themeReducer } from \"./theme-reducer\"\r\n\r\nexport const rootReducer = combineReducers({\r\n  categories: categoriesReducer,\r\n  regions: regionsReducer,\r\n  cities: citiesReducer,\r\n  news: newsReducer,\r\n  filters: filtersReducer,\r\n  theme: themeReducer,\r\n  favorites: favoritesReducer\r\n})","import React from 'react'\nimport ReactDOM from 'react-dom' \nimport './index.scss' \nimport '@vkontakte/vkui/dist/vkui.css'\nimport { App } from './App' \nimport * as serviceWorker from './serviceWorker' \nimport { applyMiddleware, createStore, Store } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { rootReducer } from './redux/reducers/rootReducer'\nimport { Provider } from 'react-redux'\n\nconst store: Store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  </Provider>,\n  document.getElementById('root')\n) \n\nserviceWorker.unregister() \n"],"sourceRoot":""}