{"version":3,"sources":["components/common/Card.tsx","components/panels/FeedPanelContent.tsx","components/navigation/Tabbar.tsx","components/layouts/PanelLayout.tsx","redux/actions.ts","components/common/FilterCard.tsx","components/modals/FilterModal.tsx","redux/types.ts","components/panels/SourcesPanelContent.tsx","components/panels/FavoritesPanelContent.tsx","App.tsx","serviceWorker.ts","redux/reducers/categories-reducer.ts","redux/reducers/cities-reducer.ts","redux/reducers/filters-reducer.ts","redux/reducers/news-reducer.ts","redux/reducers/regions-reducer.ts","redux/reducers/rootReducer.ts","index.tsx"],"names":["NewsCard","size","mode","style","minWidth","maxWidth","margin","level","weight","marginBottom","width","src","FeedPanelContent","connect","useSelector","state","news","data","error","loading","display","justifyContent","flexWrap","tabbarItems","title","id","Tabbar","activeTab","setActiveTab","vertical","wide","map","t","selected","onClick","bind","key","PanelLayout","props","children","apiURI","FilterCard","city","date","region","source","category","zIndex","toLocaleDateString","name","FilterModal","modal","setModal","dispatch","useDispatch","regions","regionsData","cities","citiesData","categories","categoriesData","useState","setTitle","setRegion","setCity","setSource","Date","setCategory","handleSelectOrInputChange","usePlatform","callback","event","target","value","formIsCorrect","Boolean","activeModal","header","left","right","type","payload","disabled","onClose","top","placeholder","onChange","r","c","SourcesPanelContent","filters","length","isFetching","onRefresh","a","fetch","response","json","message","f","icon","action","FavoritesPanelContent","App","currentPanel","useEffect","bridge","send","then","console","log","catch","activePanel","window","location","hostname","match","initialState","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e78289d.chunk.js","sourcesContent":["import { Card, Div, Title, Text, Button, Separator, Group } from '@vkontakte/vkui'\r\nimport React from 'react'\r\n\r\ninterface INewsCard {\r\n  title: string\r\n  text: string\r\n  source: string\r\n  date: Date\r\n  image?: string\r\n  video?: string\r\n}\r\n\r\nexport const NewsCard: React.FC = () => {\r\n  return (\r\n    <Card \r\n        size=\"l\" \r\n        mode=\"outline\"\r\n        style={{ \r\n          minWidth: '300px',\r\n          maxWidth: '350px', \r\n          margin: '.5rem'\r\n        }}\r\n      >\r\n        <Div>\r\n          <Title level=\"3\" weight=\"medium\" style={{ marginBottom: '.5rem' }}>\r\n            Заголовок события\r\n          </Title>\r\n          <img \r\n            width=\"100%\"\r\n            src=\"https://www.prorobot.ru/gallery/foto/11110043546.jpg\" \r\n          />\r\n          <Group style={{ marginBottom: '.5rem' }}>  \r\n            <Text weight=\"regular\">\r\n              Lorem, ipsum dolor sit amet consectetur adipisicing elit. \r\n              Suscipit, laudantium laboriosam? Ab enim optio doloribus \r\n              quasi possimus similique, commodi distinctio voluptas \r\n              laboriosam consectetur esse nihil officiis fuga non, \r\n              error eum!\r\n              Lorem, ipsum dolor sit amet consectetur adipisicing elit. \r\n              Suscipit, laudantium laboriosam? Ab enim optio doloribus \r\n              quasi possimus similique, commodi distinctio voluptas \r\n              laboriosam consectetur esse nihil officiis fuga non, \r\n              error eum!\r\n            </Text>\r\n            <Text weight=\"medium\">\r\n              Белгородская область, Белгород\r\n            </Text>\r\n          </Group>\r\n          <Button mode=\"secondary\" size=\"xl\">В избранное</Button>\r\n        </Div>\r\n      </Card>\r\n  )\r\n}","import { CardGrid, Group } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport { connect, useSelector } from 'react-redux'\r\nimport { IState } from '../../interfaces'\r\nimport { NewsCard } from '../common/Card'\r\n\r\nexport const FeedPanelContent = connect()(() => {\r\n  const { data, error, loading } = useSelector((state: IState) => state.news)\r\n  return (\r\n    <div style={{\r\n      margin: '0 auto',\r\n      maxWidth: '1200px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap'\r\n    }}>\r\n\r\n      <NewsCard />\r\n      <NewsCard />\r\n      <NewsCard />\r\n      <NewsCard />\r\n      <NewsCard />\r\n      <NewsCard />\r\n    </div>\r\n  )\r\n})","import React from 'react'\r\nimport { FixedLayout, Separator, Tabs, HorizontalScroll, TabsItem } from '@vkontakte/vkui'\r\nimport { TabbarItemId } from '../../types'\r\n\r\ninterface ITabbarItem {\r\n  id: TabbarItemId\r\n  title: string\r\n}\r\n\r\ninterface ITabbarProps {\r\n  activeTab: TabbarItemId\r\n  setActiveTab: (t: TabbarItemId) => void\r\n} \r\n\r\nconst tabbarItems: ITabbarItem[] = [\r\n  { title: 'Лента', id: 'feed' },\r\n  { title: 'Платформы', id: 'sources' },\r\n  { title: 'Избранное', id: 'favorites' },\r\n  { title: 'Профиль', id: 'profile' }\r\n]\r\n\r\nexport const Tabbar: React.FC<ITabbarProps> = ({ activeTab, setActiveTab }) => {\r\n  return (\r\n    <FixedLayout vertical=\"top\">\r\n      <Separator wide />\r\n      <Tabs>\r\n        <HorizontalScroll>\r\n          {\r\n            tabbarItems.map(t =>\r\n              <TabsItem\r\n                selected={activeTab === t.id}\r\n                onClick={setActiveTab.bind(null, t.id)}\r\n                key={t.id}\r\n              >\r\n                {t.title}\r\n              </TabsItem>\r\n            )\r\n          }\r\n        </HorizontalScroll>\r\n      </Tabs>\r\n    </FixedLayout>\r\n  )\r\n}","import React from 'react'\r\nimport { Div, Panel, PanelHeader } from '@vkontakte/vkui'\r\nimport { PanelProps } from '@vkontakte/vkui/dist/components/Panel/Panel'\r\nimport { Tabbar } from '../navigation/Tabbar'\r\nimport { TabbarItemId } from '../../types'\r\n\r\ninterface IPanelLayoutProps extends PanelProps {\r\n  activeTab: TabbarItemId\r\n  setActiveTab: (t: TabbarItemId) => void\r\n}\r\n\r\nexport const PanelLayout: React.FC<IPanelLayoutProps> = props =>\r\n  <Panel {...props}>\r\n    <PanelHeader>\r\n      <Tabbar {...props} />\r\n    </PanelHeader>\r\n    <Div style={{\r\n      margin: '0 auto',\r\n      maxWidth: '1200px',\r\n    }}>\r\n      {props.children}\r\n    </Div>\r\n  </Panel>","import { Dispatch } from \"redux\"\r\nimport { IAction, INewsFilter } from \"../interfaces\"\r\nimport { CREATE_FILTER, FETCH_CATEGORIES, FETCH_CITIES, FETCH_FILTERS, FETCH_NEWS, FETCH_REGIONS, SET_CATEGORIES_LOADING, SET_CATEGORIES_LOADING_ERROR, SET_CITIES_LOADING, SET_CITIES_LOADING_ERROR, SET_FILTERS_LOADING, SET_FILTERS_LOADING_ERROR, SET_NEWS_LOADING, SET_NEWS_LOADING_ERROR, SET_REGIONS_LOADING, SET_REGIONS_LOADING_ERROR } from \"./types\"\r\n\r\nconst apiURI = 'http://195.2.85.245'\r\n\r\nexport const fetchCategories = () => async (dispatch: Dispatch<IAction>) => {\r\n  try {\r\n    dispatch({ type: SET_CATEGORIES_LOADING, payload: true })\r\n    dispatch({ type: SET_CATEGORIES_LOADING_ERROR, payload: null })\r\n\r\n    const response = await fetch(`${apiURI}/categories`)\r\n    const json = await response.json()\r\n\r\n    dispatch({ type: FETCH_CATEGORIES, payload: json })\r\n  } catch (e) {\r\n    dispatch({ type: SET_CATEGORIES_LOADING_ERROR, payload: e.message })\r\n  } finally {\r\n    dispatch({ type: SET_CATEGORIES_LOADING, payload: false })\r\n  }\r\n}\r\n\r\nexport const fetchRegions = () => async (dispatch: Dispatch<IAction>) => {\r\n  try {\r\n    dispatch({ type: SET_REGIONS_LOADING, payload: true })\r\n    dispatch({ type: SET_REGIONS_LOADING_ERROR, payload: null })\r\n\r\n    const response = await fetch(`${apiURI}/region`)\r\n    const json = await response.json()\r\n\r\n    dispatch({ type: FETCH_REGIONS, payload: json })\r\n  } catch (e) {\r\n    dispatch({ type: SET_REGIONS_LOADING_ERROR, payload: e.message })\r\n  } finally {\r\n    dispatch({ type: SET_REGIONS_LOADING, payload: false })\r\n  }\r\n}\r\n\r\nexport const fetchCities = () => async (dispatch: Dispatch<IAction>) => {\r\n  try {\r\n    dispatch({ type: SET_CITIES_LOADING, payload: true })\r\n    dispatch({ type: SET_CITIES_LOADING_ERROR, payload: null })\r\n\r\n    const response = await fetch(`${apiURI}/city`)\r\n    const json = await response.json()\r\n\r\n    dispatch({ type: FETCH_CITIES, payload: json })\r\n  } catch (e) {\r\n    dispatch({ type: SET_CITIES_LOADING_ERROR, payload: e.message })\r\n  } finally {\r\n    dispatch({ type: SET_CITIES_LOADING, payload: false })\r\n  }\r\n}\r\n\r\nexport const fetchNews = () => async (dispatch: Dispatch<IAction>) => {\r\n  try {\r\n    dispatch({ type: SET_NEWS_LOADING, payload: true })\r\n    dispatch({ type: SET_NEWS_LOADING_ERROR, payload: null })\r\n\r\n    const response = await fetch(`${apiURI}/news`)\r\n    const json = await response.json()\r\n\r\n    dispatch({ type: FETCH_NEWS, payload: json })\r\n  } catch (e) {\r\n    dispatch({ type: SET_NEWS_LOADING_ERROR, payload: e.message })\r\n  } finally {\r\n    dispatch({ type: SET_NEWS_LOADING, payload: false })\r\n  }\r\n}\r\n\r\nexport const fetchFilters = () => async (dispatch: Dispatch<IAction>) => {\r\n  try {\r\n    dispatch({ type: SET_FILTERS_LOADING, payload: true })\r\n    dispatch({ type: SET_FILTERS_LOADING_ERROR, payload: null })\r\n\r\n    const response = await fetch(`${apiURI}/filters`)\r\n    const json = await response.json()\r\n\r\n    dispatch({ type: FETCH_FILTERS, payload: json })\r\n  } catch (e) {\r\n    dispatch({ type: SET_FILTERS_LOADING_ERROR, payload: e.message })\r\n  } finally {\r\n    dispatch({ type: SET_FILTERS_LOADING, payload: false })\r\n  }\r\n}\r\n\r\nexport const setCategoriesLoading = (payload: boolean) => ({ type: SET_CATEGORIES_LOADING, payload })\r\nexport const setCategoriesLoadingError = (payload: string) => ({ type: SET_CATEGORIES_LOADING, payload })\r\n\r\nexport const setRegionsLoading = (payload: boolean) => ({ type: SET_REGIONS_LOADING, payload })\r\nexport const setRegionsLoadingError = (payload: string) => ({ type: SET_REGIONS_LOADING_ERROR, payload })\r\n\r\nexport const setCitiesLoading = (payload: boolean) => ({ type: SET_CITIES_LOADING, payload })\r\nexport const setCitiesLoadingError = (payload: string) => ({ type: SET_CITIES_LOADING_ERROR, payload })\r\n\r\nexport const setNewsLoading = (payload: boolean) => ({ type: SET_NEWS_LOADING, payload })\r\nexport const setNewsLoadingError = (payload: string) => ({ type: SET_NEWS_LOADING_ERROR, payload })\r\n\r\nexport const setFiltersLoading = (payload: boolean) => ({ type: SET_FILTERS_LOADING, payload })\r\nexport const setFiltersLoadingError = (payload: string) => ({ type: SET_FILTERS_LOADING_ERROR, payload })\r\nexport const createFilter = (payload: INewsFilter) => ({ type: CREATE_FILTER, payload })","import { Button, Card, Div, Group, Header, Separator, SimpleCell } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport { INewsFilter } from '../../interfaces'\r\n\r\nexport const FilterCard: React.FC<INewsFilter> = ({ title, city, date, region, source, category }) => {\r\n  return (\r\n    <Card\r\n      size=\"l\" \r\n      mode=\"outline\"\r\n      style={{ \r\n        minWidth: '300px',\r\n        maxWidth: '350px', \r\n        margin: '.5rem',\r\n        zIndex: -1\r\n      }}\r\n    >\r\n      <Div>\r\n        <Header>{title}</Header>\r\n        <Separator />\r\n        {\r\n          (region || city) &&\r\n          <Group>\r\n              {region && <SimpleCell>Регион: {region.title}</SimpleCell>}\r\n              {city && <SimpleCell>Населенный пункт: {city.title}</SimpleCell>}\r\n          </Group>\r\n        }\r\n        {source && <SimpleCell>Источник: {source}</SimpleCell>}\r\n        {date && <SimpleCell>Дата: {date.toLocaleDateString()}</SimpleCell>}\r\n        {category && <SimpleCell>Категории: {category.name}</SimpleCell>}\r\n        <Button mode=\"secondary\" size=\"xl\">\r\n          Добавить сообщество\r\n        </Button>\r\n      </Div>\r\n    </Card>\r\n  )\r\n}","import { Icon24Cancel, Icon24Done } from '@vkontakte/icons'\r\nimport { ModalRoot, ModalPage, ModalPageHeader, FormLayout, FormLayoutGroup, Select, Input, PanelHeaderButton, usePlatform, IOS, ANDROID } from '@vkontakte/vkui'\r\nimport React, { ChangeEvent, SyntheticEvent, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ICategory, ICity, INewsFilter, IRegion, IState } from '../../interfaces'\r\nimport { createFilter } from '../../redux/actions'\r\n\r\ninterface IFilterModalProps {\r\n  modal: string | null\r\n  setModal: (m: string | null) => void\r\n}\r\n\r\n\r\nexport const FilterModal: React.FC<IFilterModalProps> = ({ modal = null, setModal }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { data: regionsData, loading: regionsLoading, error: regionsError } = useSelector((state: IState) => state.regions)\r\n  const { data: citiesData, loading: citiesLoading, error: citiesError } = useSelector((state: IState) => state.cities)\r\n  const { data: categoriesData, loading: categoriesLoading, error: categoriesError } = useSelector((state: IState) => state.categories)\r\n\r\n  const [title, setTitle] = useState<string>('')\r\n  const [region, setRegion] = useState<IRegion>()\r\n  const [city, setCity] = useState<ICity>()\r\n  const [source, setSource] = useState<string>('VK')\r\n  const [date, setDate] = useState<Date>(new Date())\r\n  const [time, setTime] = useState<Date>(new Date())\r\n  const [category, setCategory] = useState<ICategory>()\r\n\r\n  const platform = usePlatform()\r\n\r\n  const handleSelectOrInputChange = (callback: (value: any) => void) =>\r\n    (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => callback(event.target.value)\r\n\r\n  const createFilterHandler = () => {\r\n    const filter: INewsFilter = { title, category, city, date, region, source }    \r\n\r\n    dispatch(createFilter(filter))\r\n  }\r\n\r\n  const formIsCorrect = Boolean(title)\r\n\r\n  return (\r\n    <ModalRoot activeModal={modal}>\r\n      <ModalPage\r\n        id=\"filters\"\r\n        header={\r\n          <ModalPageHeader\r\n            left={\r\n              <PanelHeaderButton onClick={setModal.bind(null, null)}>\r\n                <Icon24Cancel />\r\n              </PanelHeaderButton>\r\n            }\r\n            right={\r\n              <PanelHeaderButton\r\n                onClick={() => {\r\n                  createFilterHandler()\r\n                  setModal(null)\r\n                }}\r\n                disabled={!formIsCorrect}\r\n              >\r\n                Создать\r\n              </PanelHeaderButton>\r\n            }\r\n          >\r\n            Фильтры\r\n          </ModalPageHeader>\r\n        }\r\n        onClose={setModal.bind(null, null)}\r\n      >\r\n        <FormLayout>\r\n          <Input\r\n            top=\"Название\"\r\n            placeholder=\"Придумайте название для ленты\"\r\n            value={title}\r\n            onChange={handleSelectOrInputChange(setTitle)}\r\n          />\r\n          <FormLayoutGroup top=\"Геолокация\">\r\n            <Select\r\n              placeholder=\"Выберите регион\"\r\n              onChange={handleSelectOrInputChange(setRegion)}\r\n            >\r\n              {\r\n                regionsData.map(r =>\r\n                  <option\r\n                    key={r.id}\r\n                    value={r.id}\r\n                  >\r\n                    {r.title}\r\n                  </option>\r\n                )\r\n              }\r\n            </Select>\r\n            <Select\r\n              placeholder=\"Выберите город\"\r\n              disabled={!region}\r\n              onChange={handleSelectOrInputChange(setCity)}\r\n            >\r\n              {\r\n                citiesData.map(c =>\r\n                  <option\r\n                    key={c.id}\r\n                    value={c.id}\r\n                  >\r\n                    {c.title}\r\n                  </option>\r\n                )\r\n              }\r\n            </Select>\r\n          </FormLayoutGroup>\r\n          <Select\r\n            top=\"Источник\"\r\n            placeholder=\"Выберите источник\"\r\n            onChange={handleSelectOrInputChange(setSource)}\r\n          >\r\n            {\r\n              <option value={source}>\r\n                {source}\r\n              </option>\r\n            }\r\n          </Select>\r\n          <FormLayoutGroup top=\"Дата и время\">\r\n            <Input type=\"date\" placeholder=\"Выберите дату\" />\r\n            <Input type=\"time\" placeholder=\"Выберите время\" />\r\n          </FormLayoutGroup>\r\n          <Select\r\n            top=\"Категория\"\r\n            placeholder=\"Выберите категорию контента\"\r\n            onChange={handleSelectOrInputChange(setCategory)}\r\n          >\r\n            {\r\n              categoriesData.map(c =>\r\n                <option\r\n                  key={c.id}\r\n                  value={c.id}\r\n                >\r\n                  {c.name}\r\n                </option>\r\n              )\r\n            }\r\n          </Select>\r\n        </FormLayout>\r\n      </ModalPage>\r\n    </ModalRoot>\r\n  )\r\n}","export const FETCH_CATEGORIES = 'FETCH-CATEGORIES'\r\nexport const FETCH_REGIONS = 'FETCH-REGIONS'\r\nexport const FETCH_CITIES = 'FETCH-CITIES'\r\nexport const FETCH_NEWS = 'FETCH-NEWS'\r\nexport const FETCH_FILTERS = 'FETCH-FILTERS'\r\n\r\nexport const SET_CATEGORIES_LOADING = 'SET-CATEGORIES-LOADING'\r\nexport const SET_REGIONS_LOADING = 'SET-REGIONS-LOADING'\r\nexport const SET_CITIES_LOADING = 'SET-CITIES-LOADING'\r\nexport const SET_NEWS_LOADING = 'SET-NEWS-LOADING'\r\nexport const SET_FILTERS_LOADING = 'SET-FILTERS-LOADING'\r\n\r\nexport const SET_CATEGORIES_LOADING_ERROR = 'SET-CATEGORIES-LOADING-ERROR'\r\nexport const SET_REGIONS_LOADING_ERROR = 'SET-REGIONS-LOADING-ERROR'\r\nexport const SET_CITIES_LOADING_ERROR = 'SET-CITIES-LOADING-ERROR'\r\nexport const SET_NEWS_LOADING_ERROR = 'SET-NEWS-LOADING-ERROR'\r\nexport const SET_FILTERS_LOADING_ERROR = 'SET-FILTERS-LOADING-ERROR'\r\n\r\nexport const CREATE_FILTER = 'CREATE-FILTER'","import { Icon56AddCircleOutline } from '@vkontakte/icons'\r\nimport { Button, FormStatus, Group, Placeholder, PullToRefresh, Spinner } from '@vkontakte/vkui'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { IState } from '../../interfaces'\r\nimport { fetchFilters } from '../../redux/actions'\r\nimport { FilterCard } from '../common/FilterCard'\r\nimport { FilterModal } from '../modals/FilterModal'\r\n\r\nexport const SourcesPanelContent: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [modal, setModal] = useState<string | null>(null)\r\n  const { data, error, loading } = useSelector((state: IState) => state.filters)\r\n\r\n  return (\r\n    <>\r\n      <FilterModal modal={modal} setModal={setModal} />\r\n      {\r\n        false\r\n          ?\r\n          <FormStatus\r\n            mode=\"error\"\r\n            header=\"Ошибка при подключении к серверу\"\r\n          >\r\n            Ошибка при загрузке данных\r\n          </FormStatus>\r\n          :\r\n          loading\r\n            ?\r\n            <Spinner size=\"large\" />\r\n            :\r\n            data.length\r\n              ?\r\n              <>\r\n                <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '1rem' }}>\r\n                  <Button size=\"l\" onClick={setModal.bind(null, 'filters')}>\r\n                    Добавить ленту\r\n                  </Button>\r\n                </div>\r\n                <PullToRefresh isFetching={loading} onRefresh={dispatch.bind(null, fetchFilters())}>\r\n                  <Group>\r\n                    {data.map(f => <FilterCard {...f} />)}\r\n                  </Group>\r\n                </PullToRefresh>\r\n              </>\r\n              :\r\n              <Placeholder\r\n                icon={<Icon56AddCircleOutline />}\r\n                header=\"Персонализированные ленты\"\r\n                action={\r\n                  <Button size=\"l\" onClick={setModal.bind(null, 'filters')}>\r\n                    Добавить ленту\r\n                  </Button>\r\n                }>\r\n                Настройте набор источников, из которых хотите получать новости\r\n              </Placeholder>\r\n      }\r\n    </>\r\n  )\r\n}","import { CardGrid, Group } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport { connect, useSelector } from 'react-redux'\r\nimport { IState } from '../../interfaces'\r\nimport { NewsCard } from '../common/Card'\r\n\r\nexport const FavoritesPanelContent = connect()(() => {\r\n  const { data, error, loading } = useSelector((state: IState) => state.news)\r\n  return (\r\n    <div style={{\r\n      margin: '0 auto',\r\n      maxWidth: '1200px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap'\r\n    }}>\r\n\r\n      <NewsCard />\r\n      <NewsCard />\r\n      <NewsCard />\r\n      <NewsCard />\r\n      <NewsCard />\r\n      <NewsCard />\r\n    </div>\r\n  )\r\n})","import React, { useEffect, useState } from 'react'\nimport { View } from '@vkontakte/vkui'\nimport { TabbarItemId } from './types'\nimport { FeedPanelContent } from './components/panels/FeedPanelContent'\nimport { PanelLayout } from './components/layouts/PanelLayout'\nimport { SourcesPanelContent } from './components/panels/SourcesPanelContent'\nimport bridge from '@vkontakte/vk-bridge'\nimport { useDispatch } from 'react-redux'\nimport { fetchCategories, fetchRegions } from './redux/actions'\nimport { FavoritesPanelContent } from './components/panels/FavoritesPanelContent'\n\nexport const App: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<TabbarItemId>('feed')\n  const dispatch = useDispatch()\n\n  let currentPanel: React.ReactNode = null\n\n  switch (activeTab) {\n    case 'feed':\n      currentPanel = <FeedPanelContent />\n      break\n    case 'sources':\n      currentPanel = <SourcesPanelContent />\n      break\n    case 'favorites':\n      currentPanel = <FavoritesPanelContent />\n  }\n\n  useEffect(() => {\n    bridge\n      .send('VKWebAppInit')\n      .then(() => bridge.send('VKWebAppGetPersonalCard'))\n      .then(data => console.log(data))\n      .catch(console.log)\n  })\n\n  useEffect(() => {\n    // dispatch(fetchFilters())\n    dispatch(fetchCategories())\n    // dispatch(fetchCities())\n    dispatch(fetchRegions())\n    // dispatch(fetchNews())\n  }, [])\n\n  return (\n    <View activePanel=\"main\">\n      <PanelLayout \n        id=\"main\" \n        activeTab={activeTab} \n        setActiveTab={setActiveTab}\n      >\n        {currentPanel}\n      </PanelLayout>\n    </View>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Reducer } from \"react\"\r\nimport { IAction, ICategory, IStatePartial } from \"../../interfaces\"\r\nimport { FETCH_CATEGORIES, SET_CATEGORIES_LOADING, SET_CATEGORIES_LOADING_ERROR } from \"../types\"\r\n\r\nconst initialState: IStatePartial<ICategory> = {\r\n  data: [],\r\n  error: null,\r\n  loading: false\r\n}\r\n\r\nexport const categoriesReducer: Reducer<IStatePartial<ICategory>, IAction> = (state: IStatePartial<ICategory> = initialState, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case FETCH_CATEGORIES: return { ...state, data: payload }\r\n    case SET_CATEGORIES_LOADING: return { ...state, loading: payload }\r\n    case SET_CATEGORIES_LOADING_ERROR: return { ...state, error: payload }\r\n\r\n    default: return state\r\n  }\r\n}","import { Reducer } from \"react\"\r\nimport { IAction, ICategory, IStatePartial } from \"../../interfaces\"\r\nimport { FETCH_CITIES, SET_CITIES_LOADING, SET_CITIES_LOADING_ERROR } from \"../types\"\r\n\r\nconst initialState: IStatePartial<ICategory> = {\r\n  data: [],\r\n  error: null,\r\n  loading: false\r\n}\r\n\r\nexport const citiesReducer: Reducer<IStatePartial<ICategory>, IAction> = (state: IStatePartial<ICategory> = initialState, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case FETCH_CITIES: return { ...state, data: payload }\r\n    case SET_CITIES_LOADING: return { ...state, loading: payload }\r\n    case SET_CITIES_LOADING_ERROR: return { ...state, error: payload }\r\n\r\n    default: return state\r\n  }\r\n}","import { Reducer } from \"react\"\r\nimport { IAction, IRegion, IStatePartial } from \"../../interfaces\"\r\nimport { CREATE_FILTER, FETCH_FILTERS, SET_FILTERS_LOADING, SET_FILTERS_LOADING_ERROR } from \"../types\"\r\n\r\nconst initialState: IStatePartial<IRegion> = {\r\n  data: [],\r\n  error: null,\r\n  loading: false\r\n}\r\n\r\nexport const filtersReducer: Reducer<IStatePartial<IRegion>, IAction> = (state: IStatePartial<IRegion> = initialState, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case CREATE_FILTER: return { ...state, data: [...state.data, payload] }\r\n    case FETCH_FILTERS: return { ...state, data: payload }\r\n    case SET_FILTERS_LOADING: return { ...state, loading: payload }\r\n    case SET_FILTERS_LOADING_ERROR: return { ...state, error: payload }\r\n\r\n    default: return state\r\n  }\r\n}","import { Reducer } from \"react\"\r\nimport { IAction, ICategory, IStatePartial } from \"../../interfaces\"\r\nimport { FETCH_NEWS, SET_NEWS_LOADING, SET_NEWS_LOADING_ERROR } from \"../types\"\r\n\r\nconst initialState: IStatePartial<ICategory> = {\r\n  data: [],\r\n  error: null,\r\n  loading: false\r\n}\r\n\r\nexport const newsReducer: Reducer<IStatePartial<ICategory>, IAction> = (state: IStatePartial<ICategory> = initialState, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case FETCH_NEWS: return { ...state, data: payload }\r\n    case SET_NEWS_LOADING: return { ...state, loading: payload }\r\n    case SET_NEWS_LOADING_ERROR: return { ...state, error: payload }\r\n\r\n    default: return state\r\n  }\r\n}","import { Reducer } from \"react\"\r\nimport { IAction, IRegion, IStatePartial } from \"../../interfaces\"\r\nimport { FETCH_REGIONS, SET_REGIONS_LOADING, SET_REGIONS_LOADING_ERROR } from \"../types\"\r\n\r\nconst initialState: IStatePartial<IRegion> = {\r\n  data: [],\r\n  error: null,\r\n  loading: false\r\n}\r\n\r\nexport const regionsReducer: Reducer<IStatePartial<IRegion>, IAction> = (state: IStatePartial<IRegion> = initialState, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case FETCH_REGIONS: return { ...state, data: payload }\r\n    case SET_REGIONS_LOADING: return { ...state, loading: payload }\r\n    case SET_REGIONS_LOADING_ERROR: return { ...state, error: payload }\r\n\r\n    default: return state\r\n  }\r\n}","import { combineReducers } from \"redux\"\r\nimport { categoriesReducer } from \"./categories-reducer\"\r\nimport { citiesReducer } from \"./cities-reducer\"\r\nimport { filtersReducer } from \"./filters-reducer\"\r\nimport { newsReducer } from \"./news-reducer\"\r\nimport { regionsReducer } from \"./regions-reducer\"\r\n\r\nexport const rootReducer = combineReducers({\r\n  categories: categoriesReducer,\r\n  regions: regionsReducer,\r\n  cities: citiesReducer,\r\n  news: newsReducer,\r\n  filters: filtersReducer\r\n})","import React from 'react'\nimport ReactDOM from 'react-dom' \nimport './index.scss' \nimport '@vkontakte/vkui/dist/vkui.css'\nimport { App } from './App' \nimport * as serviceWorker from './serviceWorker' \nimport { applyMiddleware, createStore, Store } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { rootReducer } from './redux/reducers/rootReducer'\nimport { Provider } from 'react-redux'\n\nconst store: Store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  </Provider>,\n  document.getElementById('root')\n) \n\nserviceWorker.unregister() \n"],"sourceRoot":""}